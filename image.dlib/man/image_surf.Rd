% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image_surf.R
\name{image_surf}
\alias{image_surf}
\title{Find SURF points in an image}
\usage{
image_surf(file, max_points = 1000, detection_threshold = 30)
}
\arguments{
\item{file}{a bmp file in bmp3 format with extension .bmp}

\item{max_points}{maximum number of surf points to find}

\item{detection_threshold}{detection threshold (the higher, the lower the number of SURF points found)}
}
\value{
a list with SURF points found and the SURF descriptor. It contains:
\itemize{
 \item{points: }{The number of SURF points}
 \item{x: }{The x location of each SURF point}
 \item{y: }{The y location of each SURF point}
 \item{angle: }{The angle of each SURF point}
 \item{pyramid_scale: }{The pyramid scale of each SURF point}
 \item{score: }{The score of each SURF point}
 \item{laplacian: }{The laplacian at each SURF point}
 \item{surf: }{The SURF descriptor which is a matrix with 64 columns describing the point}
}
}
\description{
SURF (speeded up robust features) points are blobs in a digital image
\url{https://en.wikipedia.org/wiki/Speeded_up_robust_features}. The function identifies
these points in the image and also provides a numeric descriptor of each point.

This SURF descriptor is used on computer vision applications like object matching (by comparing the SURF
descriptor of several images using e.g. kNN - from the rflann package) or object recognition.
The SURF feature descriptor is based on the sum of the Haar wavelet response around the point of interest.
More information on the calculation, see the reference paper.
}
\examples{
f <- system.file("extdata", "cruise_boat.bmp", package="image.dlib")
surf_blobs <- image_surf(f, max_points = 10000, detection_threshold = 50)
str(surf_blobs)

## Plot the points
library(imager)
library(magick)
img <- image_read(path = f)
plot(as.cimg(img), main = "SURF points")
points(surf_blobs$x, surf_blobs$y, col = "red", pch = 20)
}
\references{
SURF: Speeded Up Robust Features By Herbert Bay, Tinne Tuytelaars, and Luc Van Gool
}
